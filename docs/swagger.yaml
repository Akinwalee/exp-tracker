openapi: 3.0.0
info:
  title: Expense Tracker API
  description: A RESTful API for an expense-tracking application that manages user expenses, income, savings, and notifications with real-time functionality via Socket.IO and Paystack integration for payments.
  version: 1.0.0
  contact:
    name: Developer Team
    email: support@example.com

servers:
  - url: http://localhost:3000/api
    description: Local Development Server

tags:
  - name: Authentication
    description: User login, signup, and JWT authentication.
  - name: Expenses
    description: Expense-related operations.
  - name: Income
    description: Income-related operations.
  - name: Savings
    description: Savings-related operations.
  - name: Notifications
    description: Real-time notifications for users.
  - name: Paystack
    description: Payment and transaction logic using Paystack.

paths:
  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: password123
      responses:
        '201':
          description: User registered successfully.
        '400':
          description: Bad request.
        '500':
          description: Internal server error.

  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login a user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Login successful.
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.

  /expenses:
    get:
      tags:
        - Expenses
      summary: Get all expenses for the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of all expenses.
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.
    post:
      tags:
        - Expenses
      summary: Add a new expense.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: Grocery shopping
                amount:
                  type: number
                  example: 50.75
                category:
                  type: string
                  example: Food
      responses:
        '201':
          description: Expense added successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.

  /income:
    get:
      tags:
        - Income
      summary: Get all income records for the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of all income records.
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.
    post:
      tags:
        - Income
      summary: Add a new income record.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  example: Freelance project payment
                amount:
                  type: number
                  example: 300.00
      responses:
        '201':
          description: Income added successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.

  /savings:
    get:
      tags:
        - Savings
      summary: Get user savings details.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Savings details retrieved.
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.
    post:
      tags:
        - Savings
      summary: Add to savings.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  example: 100.00
      responses:
        '201':
          description: Savings updated successfully.
        '400':
          description: Bad request.
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.

  /notifications:
    get:
      tags:
        - Notifications
      summary: Get all notifications for the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of notifications.
        '401':
          description: Unauthorized.
        '500':
          description: Internal server error.

  /paystack/initialize:
    post:
      tags:
        - Paystack
      summary: Initialize a transaction using Paystack.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: john.doe@example.com
                amount:
                  type: number
                  example: 5000
      responses:
        '200':
          description: Transaction initialized.
        '400':
          description: Bad request.
        '500':
          description: Internal server error.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
